{{!
    This file is part of Moodle - http://moodle.org/

    Moodle is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Moodle is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
}}
{{!
    @template core/activity_header

    Activity header template.

    Context variables required for this template:
    * title - The title of the activity module
    * description - The intro for the module
    * completion - The completion info if available for the the module as acquired via the activity_information method
    * additional_items - Any additional URL select navigation that needs to show up in the header

    Example context (json):
    {
        "title": "Assignment 1",
        "description": "The assignment does something",
        "completion": "<div class='activitycompletion'>Some activity completion criteria</div>",
        "additional_items": {
            "id": "url_select_test",
            "action": "https://example.com/post",
            "formid": "url_select_form",
            "sesskey": "sesskey",
            "label": "core/url_select",
            "helpicon": {
                "title": "Help with something",
                "text": "Help with something",
                "url": "http://example.org/help",
                "linktext": "",
                "icon":{
                    "extraclasses": "iconhelp",
                    "attributes": [
                        {"name": "src", "value": "../../../pix/help.svg"},
                        {"name": "alt", "value": "Help icon"}
                    ]
                }
            },
            "showbutton": "Go",
            "options": [{
                "name": "Group 1", "isgroup": true, "options":
                [
                    {"name": "Item 1", "isgroup": false, "value": "1"},
                    {"name": "Item 2", "isgroup": false, "value": "2"}
                ]},
                {"name": "Group 2", "isgroup": true, "options":
                [
                    {"name": "Item 3", "isgroup": false, "value": "3"},
                    {"name": "Item 4", "isgroup": false, "value": "4"}
                ]}],
            "disabled": false,
            "title": "Some cool title"
        }
    }
}}
<span id="maincontent"></span>
{{#title}}
    <h2>{{{title}}}</h2>
{{/title}}
<div class="activity-header" data-for="page-activity-header">{{!
    }}{{#completion}}
        <span class="sr-only">{{#str}} overallaggregation, completion {{/str}}</span>
        {{{completion}}}
    {{/completion}}
    {{#description}}
        <div class="activity-description" id="intro">
            {{{description}}}
        </div>
    {{/description}}{{!
}}</div>
{{#additional_items}}
    <nav aria-label="{{#str}} additionalcustomnav, core {{/str}}">
        {{> core/url_select}}
    </nav>
{{/additional_items}}
<script>
    document.addEventListener("DOMContentLoaded", () => {
        if (document.querySelector(".h5p-iframe-wrapper") !== null) {
            if(document.querySelector(".activity-description") !== null) {
                let descriptionHtml = document.querySelector(".activity-description").outerHTML;
                document.querySelector(".activity-description").remove();
                document.querySelector("#region-main").insertAdjacentHTML('beforeend',`<div class="m-3 px-3 bg-light rounded">
                    ${descriptionHtml}
                </div>`);
                const elementos = document.querySelectorAll(".activity-description a");
                elementos.forEach(ele =>{
                    const eleHref = ele.getAttribute('href');
                    let hrefExt = eleHref.split('.').pop().toLowerCase();
                    if(hrefExt.indexOf('?') != -1){
                        hrefExt = hrefExt.substring(0,hrefExt.indexOf('?'));
                    }
                    ele.classList.add('btn');
                    ele.classList.add('btn-sm');
                    switch(hrefExt){
                        case 'pdf':
                        ele.classList.add('btn-danger');
                        ele.innerHTML += `<i class="fas fa-file-pdf"></i>`;
                        break
                    case 'docx':
                    case 'doc':
                        ele.classList.add('fa-file-word');
                        ele.classList.add('btn-primary');
                        ele.innerHTML += `<i class="fas fa-file-word"></i>`;
                        break;
                    case 'xlsx':
                    case 'xls':
                        ele.classList.add('fa-file-excel');
                        ele.classList.add('btn-success');
                        ele.innerHTML += `<i class="fas fa-file-excel"></i>`;
                        break;
                    case 'pptx':
                    case 'ppt':
                        ele.classList.add('fa-file-powerpoint');
                        ele.classList.add('btn-warning');
                        ele.innerHTML += `<i class="fas fa-file-powerpoint"></i>`;
                        break;
                    case 'zip':
                    case 'rar':
                    case '7z':
                        ele.classList.add('fa-file-archive');
                        ele.classList.add('btn-info');
                        ele.innerHTML += `<i class="fas fa-file-archive"></i>`;
                        break;
                    case 'jpg':
                    case 'jpeg':
                    case 'png':
                    case 'gif':
                    case 'svg':
                        ele.classList.add('fa-file-image');
                        ele.classList.add('btn-light');
                        ele.classList.add('border');
                        ele.innerHTML += `<i class="fas fa-file-image"></i>`;
                        break;
                    default:
                            ele.classList.add('btn-link');
                            ele.classList.add('border');
                        break;
                    }
                });
            }
        }
    });
</script>